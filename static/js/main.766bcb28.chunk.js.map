{"version":3,"sources":["components/TableRow.js","components/Table.js","App.js","index.js"],"names":["TableRow","props","employee","className","name","first","last","dob","age","location","city","Table","useState","employees","initialEmployees","setInitialEmployees","setEmployees","useEffect","type","placeholder","onKeyUp","event","filter","i","toLowerCase","includes","target","value","htmlFor","style","marginLeft","id","onChange","sort","a","b","map","App","axios","get","then","response","data","results","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSAiBeA,EAfE,SAACC,GAEd,IAAIC,EAAWD,EAAMC,SAErB,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,MAAf,SAAsBD,EAASE,KAAKC,QACpC,qBAAKF,UAAU,MAAf,SAAsBD,EAASE,KAAKE,OACpC,qBAAKH,UAAU,MAAf,SAAsBD,EAASK,IAAIC,MACnC,qBAAKL,UAAU,MAAf,SAAsBD,EAASO,SAASC,WCsGjCC,EA5GD,SAACV,GAAW,IAAD,EAE2BW,mBAASX,EAAMY,WAF1C,mBAEdC,EAFc,KAEIC,EAFJ,OAGaH,mBAASX,EAAMY,WAH5B,mBAGdA,EAHc,KAGHG,EAHG,KAKrBC,qBAAU,WACND,EAAaf,EAAMY,WACnBE,EAAoBd,EAAMY,aAC3B,CAACZ,EAAMY,YAqEV,OACI,sBAAKV,UAAU,QAAf,UAEI,sBAAKA,UAAU,YAAf,UACI,uBAAOe,KAAK,OAAOC,YAAY,uBAAuBC,QAV9C,SAACC,GACjBL,EAAaF,EAAiBQ,QAAO,SAACC,GAClC,OAAOA,EAAEnB,KAAKE,KAAKkB,cAAcC,SAASJ,EAAMK,OAAOC,MAAMH,sBASzD,uBAAOI,QAAQ,SAASC,MAAO,CAAEC,WAAY,QAA7C,wBACA,yBAAQ1B,KAAK,SAAS2B,GAAG,OAAOC,SAzExB,SAACX,GAGjB,OAFaA,EAAMK,OAAOC,OAGtB,IAAK,aACDX,EAAa,YACNH,EAAUoB,MAAK,SAACC,EAAGC,GAClB,OAAID,EAAE9B,KAAKC,MAAQ8B,EAAE/B,KAAKC,OACd,EAER6B,EAAE9B,KAAKC,MAAQ8B,EAAE/B,KAAKC,MACf,EAEJ,OAGf,MACJ,IAAK,YACDW,EAAa,YACNH,EAAUoB,MAAK,SAACC,EAAGC,GAClB,OAAID,EAAE9B,KAAKE,KAAO6B,EAAE/B,KAAKE,MACb,EAER4B,EAAE9B,KAAKE,KAAO6B,EAAE/B,KAAKE,KACd,EAEJ,OAGf,MACJ,IAAK,OACDU,EAAa,YACNH,EAAUoB,MAAK,SAACC,EAAGC,GAClB,OAAID,EAAEzB,SAASC,KAAOyB,EAAE1B,SAASC,MACrB,EAERwB,EAAEzB,SAASC,KAAOyB,EAAE1B,SAASC,KACtB,EAEJ,OAGf,MACJ,IAAK,MACDM,EAAa,YACNH,EAAUoB,MAAK,SAACC,EAAGC,GAClB,OAAID,EAAE3B,IAAIC,IAAM2B,EAAE5B,IAAIC,KACV,EAER0B,EAAE3B,IAAIC,IAAM2B,EAAE5B,IAAIC,IACX,EAEJ,SAqBf,UACI,wBAAQmB,MAAM,aAAd,wBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,MAAd,uBAIR,sBAAKxB,UAAU,MAAf,UACI,oBAAIA,UAAU,MAAd,wBACA,oBAAIA,UAAU,MAAd,uBACA,oBAAIA,UAAU,MAAd,iBACA,oBAAIA,UAAU,MAAd,qBAIAU,EAAUuB,KAAI,SAAClC,EAAUqB,GACrB,OAAQ,cAAC,EAAD,CAAkBrB,SAAUA,GAAbqB,UC9E5Bc,EArBH,WAAO,IAAD,EAEkBzB,mBAAS,IAF3B,mBAETC,EAFS,KAEEG,EAFF,KAYhB,OARAC,qBAAU,WAERqB,IAAMC,IAAI,iDACTC,MAAK,SAAAC,GACJzB,EAAayB,EAASC,KAAKC,cAE5B,IAID,cADA,CACA,OAAKxC,UAAU,YAAf,UACE,oDACA,cAAC,EAAD,CAAOU,UAAWA,QCjBxB+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.766bcb28.chunk.js","sourcesContent":["import \"./Row.css\";\r\n\r\nconst TableRow = (props) => {\r\n\r\n    var employee = props.employee;\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col\">{employee.name.first}</div>\r\n        <div className=\"col\">{employee.name.last}</div>\r\n        <div className=\"col\">{employee.dob.age}</div>\r\n        <div className=\"col\">{employee.location.city}</div>\r\n      </div>  \r\n    );\r\n\r\n};\r\n\r\nexport default TableRow;","import { useEffect, useState } from \"react\";\r\nimport TableRow from \"./TableRow\";\r\n\r\nimport \"./Row.css\";\r\n\r\nconst Table = (props) => {\r\n\r\n    const [initialEmployees, setInitialEmployees] = useState(props.employees);\r\n    const [employees, setEmployees] = useState(props.employees);\r\n\r\n    useEffect(() => {\r\n        setEmployees(props.employees);\r\n        setInitialEmployees(props.employees);\r\n    }, [props.employees]);\r\n\r\n    const triggerSort = (event) => {\r\n        var sortBy = event.target.value;\r\n        \r\n        switch (sortBy) {\r\n            case \"First Name\":\r\n                setEmployees([\r\n                    ...employees.sort((a, b) => {\r\n                        if (a.name.first < b.name.first) {\r\n                            return -1;\r\n                        }\r\n                        if (a.name.first > b.name.first) {\r\n                            return 1;\r\n                        }\r\n                        return 0;\r\n                    })\r\n                ]);\r\n                break;\r\n            case \"Last Name\":\r\n                setEmployees([\r\n                    ...employees.sort((a, b) => {\r\n                        if (a.name.last < b.name.last) {\r\n                            return -1;\r\n                        }\r\n                        if (a.name.last > b.name.last) {\r\n                            return 1;\r\n                        }\r\n                        return 0;\r\n                    })\r\n                ]);\r\n                break;\r\n            case \"City\":\r\n                setEmployees([\r\n                    ...employees.sort((a, b) => {\r\n                        if (a.location.city < b.location.city) {\r\n                            return -1;\r\n                        }\r\n                        if (a.location.city > b.location.city) {\r\n                            return 1;\r\n                        }\r\n                        return 0;\r\n                    })\r\n                ]);\r\n                break;\r\n            case \"Age\":\r\n                setEmployees([\r\n                    ...employees.sort((a, b) => {\r\n                        if (a.dob.age < b.dob.age) {\r\n                            return -1;\r\n                        }\r\n                        if (a.dob.age > b.dob.age) {\r\n                            return 1;\r\n                        }\r\n                        return 0;\r\n                    })\r\n                ]);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const searchNames = (event) => {\r\n        setEmployees(initialEmployees.filter((i) => {\r\n            return i.name.last.toLowerCase().includes(event.target.value.toLowerCase())\r\n        }));\r\n    };\r\n\r\n    return(\r\n        <div className=\"table\">\r\n\r\n            <div className=\"sort-form\">\r\n                <input type=\"text\" placeholder=\"Search by surname...\" onKeyUp={searchNames}></input>\r\n                <label htmlFor=\"sortBy\" style={{ marginLeft: \"2rem\" }}> Sort by: </label>\r\n                <select name=\"sortBy\" id=\"sort\" onChange={triggerSort}>\r\n                    <option value=\"First Name\">First Name</option>\r\n                    <option value=\"Last Name\">Last Name</option>\r\n                    <option value=\"City\">City</option>\r\n                    <option value=\"Age\">Age</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <h3 className=\"col\">First Name</h3>\r\n                <h3 className=\"col\">Last Name</h3>\r\n                <h3 className=\"col\">Age</h3>\r\n                <h3 className=\"col\">City</h3>\r\n            </div>\r\n\r\n            {\r\n                employees.map((employee, i) => {\r\n                    return (<TableRow key={i} employee={employee}/>);\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Table;","import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './App.css';\n\nimport Table from \"./components/Table\";\n\nconst App = () => {\n\n  const [employees, setEmployees] = useState([]);\n\n  useEffect(() => {\n    // Get employee information\n    axios.get(\"https://randomuser.me/api/?results=500&nat=au\")\n    .then(response => {\n      setEmployees(response.data.results);\n    });\n  }, []);\n\n  return (\n    // Here lies our app\n    <div className=\"container\">\n      <h1>Employee Directory</h1>\n      <Table employees={employees}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}